{"version":3,"sources":["components/form/form.jsx","containers/expense-calculator/expense-calculator.jsx","App.js","reportWebVitals.js","index.js","components/form/form.module.css"],"names":["ExpenseForm","props","textValue","useRef","className","classes","form","id","addIncome","type","ref","placeholder","onChange","changeHandler","onClick","clicked","current","value","ExpenxeTracker","state","income","expense","balance","totalIncome","totalExpense","addExpense","myChangeHandler","event","setState","target","updateExpense","totalBalance","parseInt","updateIncome","updatebalance","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yRAeeA,EAZG,SAACC,GACf,IAAMC,EAAYC,iBAAO,MACzB,OAEI,sBAAKC,UAAWC,IAAQC,KAAxB,UACA,wBAAOC,GAAG,MAAV,UAAkBN,EAAMO,UAAxB,OACA,uBAAOC,KAAK,OAAQF,GAAG,MAAMG,IAAKR,EAAWS,YAAaV,EAAMO,UAAWI,SAAUX,EAAMY,gBAC3F,wBAAQC,QAAS,kBAAIb,EAAMc,QAAQb,EAAUc,QAAQC,QAArD,qBCsDOC,E,4MA5DXC,MAAQ,CACJC,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,aAAa,EACbhB,UAAU,aACViB,WAAW,e,EAOfC,gBAAkB,SAACC,GACf,EAAKC,SAAS,CAACR,OAAQO,EAAME,OAAOZ,S,EAEzCa,cAAc,SAACb,GACd,IAAIc,EAAa,EAAKZ,MAAMG,QAAQU,SAASf,GACzCO,EAAa,EAAKL,MAAMK,aAAaQ,SAASf,GAC/C,EAAKW,SAAS,CACVP,QAAQJ,EACRK,QAAQS,EACRP,aAAaA,K,EAGrBS,aAAa,SAAChB,GACb,IAAIc,EAAaC,SAASf,GAAO,EAAKE,MAAMG,QACxCC,EAAYS,SAASf,GAAO,EAAKE,MAAMI,YAC3C,EAAKK,SAAS,CACVR,OAAOH,EACPK,QAAQS,EACRR,YAAYA,K,EAKjBW,cAAc,WACT,IAAIH,EAAa,EAAKZ,MAAMG,QAC5Ba,QAAQC,IAAI,OAAOL,GACnBA,EAAa,EAAKZ,MAAMC,OAAO,EAAKD,MAAME,QAC1C,EAAKO,SAAS,CAACN,QAAQS,K,4CAE3B,WACI,OACI,sBAAK3B,UAAWC,IAAhB,UACA,0CAAagC,KAAKlB,MAAMG,WACxB,+CAAkBe,KAAKlB,MAAMI,eAC7B,gDAAmBc,KAAKlB,MAAMK,gBAC9B,wBAAQV,QAASuB,KAAKH,cAAtB,2BACA,yCAAYG,KAAKlB,MAAMC,UACvB,0CAAaiB,KAAKlB,MAAME,WACxB,cAAC,EAAD,CAAab,UAAW6B,KAAKlB,MAAMX,UAAWO,QAASsB,KAAKJ,eAC5D,cAAC,EAAD,CAAazB,UAAW6B,KAAKlB,MAAMM,WAAYV,QAASsB,KAAKP,uB,GAtD5CQ,aCcdC,G,kNAXbpB,MAAQ,G,4CAGR,WACE,OACG,8BACD,cAAC,EAAD,U,GAPYmB,cCOHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,sCCfAc,EAAOC,QAAU,CAAC,KAAO,sB","file":"static/js/main.4db76284.chunk.js","sourcesContent":["import React,{useRef} from 'react';\r\nimport classes from './form.module.css'\r\n\r\nconst ExpenseForm=(props)=>{\r\n    const textValue = useRef(null);\r\n    return(\r\n\r\n        <div className={classes.form}>\r\n        <label id=\"add\" >{props.addIncome} </label>\r\n        <input type='text'  id=\"add\" ref={textValue} placeholder={props.addIncome} onChange={props.changeHandler}></input>\r\n        <button onClick={()=>props.clicked(textValue.current.value)}>Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React, { Component } from 'react';\r\nimport classes from './expense-calculator.module.css'\r\nimport ExpenseForm  from '../../components/form/form';\r\nclass ExpenxeTracker extends Component {\r\n    state = { \r\n        income:0,\r\n        expense:0,\r\n        balance:0,\r\n        totalIncome:0,\r\n        totalExpense:0,\r\n        addIncome:\"Add Income\",\r\n        addExpense:\"Add Expense\"\r\n     }\r\n\r\n    //  addIncome=(value)=>{\r\n       \r\n    //      this.setState({income:value});\r\n    // }\r\n    myChangeHandler = (event) => {\r\n        this.setState({income: event.target.value});\r\n      }\r\n   updateExpense=(value)=>{\r\n    let totalBalance=this.state.balance-parseInt(value);\r\n    let totalExpense=this.state.totalExpense+parseInt(value);\r\n       this.setState({\r\n           expense:value,\r\n           balance:totalBalance,\r\n           totalExpense:totalExpense     \r\n       })\r\n   }\r\n   updateIncome=(value)=>{\r\n    let totalBalance=parseInt(value)+this.state.balance;\r\n    let totalIncome=parseInt(value)+this.state.totalIncome;\r\n    this.setState({\r\n        income:value,\r\n        balance:totalBalance,\r\n        totalIncome:totalIncome\r\n\r\n    })\r\n  \r\n}\r\n   updatebalance=()=>{\r\n        var totalBalance=this.state.balance;\r\n        console.log(\"ssss\",totalBalance);\r\n        totalBalance=this.state.income-this.state.expense;\r\n        this.setState({balance:totalBalance});\r\n   }\r\n    render() { \r\n        return ( \r\n            <div className={classes}>\r\n            <h1>Balance:{this.state.balance}</h1>\r\n            <h2>Total Income:{this.state.totalIncome}</h2>\r\n            <h2>Total Expence:{this.state.totalExpense}</h2>\r\n            <button onClick={this.updatebalance}>Check Balance</button>\r\n            <h2>Income:{this.state.income}</h2>\r\n            <h2>Expense:{this.state.expense}</h2>\r\n            <ExpenseForm addIncome={this.state.addIncome} clicked={this.updateIncome}  ></ExpenseForm>\r\n            <ExpenseForm addIncome={this.state.addExpense} clicked={this.updateExpense}  ></ExpenseForm>\r\n            \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ExpenxeTracker;","import React, { Component } from 'react';\nimport ExpenxeTracker from './containers/expense-calculator/expense-calculator';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {  \n    \n   }\n  render() { \n    return (\n       <div>\n      <ExpenxeTracker></ExpenxeTracker>\n      </div> );\n  }\n}\n \nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form___VzKe\"};"],"sourceRoot":""}